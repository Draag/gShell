// gShell is licensed under the GNU GENERAL PUBLIC LICENSE, Version 3
//
// http://www.gnu.org/licenses/gpl-3.0.en.html
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// gShell is based upon https://github.com/google/google-api-dotnet-client, which is licensed under the Apache 2.0
// license: https://github.com/google/google-api-dotnet-client/blob/master/LICENSE
//
// gShell is reliant upon the Google Apis. Please see the specific API pages for specific licensing information.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a fork of google-apis-code-generator:
//       https://github.com/squid808/apis-client-generator
//
//     How neat is that? Pretty neat.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;
using Google.Apis.Classroom.v1.Data;
using gClassroom = gShell.dotNet.Classroom;

namespace gShell.Cmdlets.Classroom
{
    /// <summary>A base class which provides support for service account integration and schema objects.</summary>
    public abstract class ClassroomServiceAccountBase : ClassroomBase { }


    /// <summary>
    /// <para type="synopsis">Creates a new Classroom API Student object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Student object which may be required as a parameter for some other Cmdlets in the Classroom API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.Classroom.v1.Data.Student</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomStudentObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomStudentObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomStudentObj",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomStudentObj")]
    [OutputType(typeof(Google.Apis.Classroom.v1.Data.Student))]
    public class NewGClassroomStudentObjCommand : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifier of the course. Read-only.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier of the course. Read-only.")]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Global user information for the student. Read-only.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Global user information for the student. Read-only.")]
        public UserProfile Profile { get; set; }

        /// <summary>
        /// <para type="description">Identifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user")]
        public string UserId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.Classroom.v1.Data.Student()
            {
                CourseId = this.CourseId,
                Profile = this.Profile,
                UserId = this.UserId,
            };

            if (ShouldProcess("Student"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Classroom API Course object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Course object which may be required as a parameter for some other Cmdlets in the Classroom API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.Classroom.v1.Data.Course</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomCourseObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomCourseObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomCourseObj",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomCourseObj")]
    [OutputType(typeof(Google.Apis.Classroom.v1.Data.Course))]
    public class NewGClassroomCourseObjCommand : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Absolute link to this course in the Classroom web UI. Read-only.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Absolute link to this course in the Classroom web UI. Read-only.")]
        public string AlternateLink { get; set; }

        /// <summary>
        /// <para type="description">State of the course. If unspecified, the default state is `PROVISIONED`.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "State of the course. If unspecified, the default state is `PROVISIONED`.")]
        public string CourseState { get; set; }

        /// <summary>
        /// <para type="description">Creation time of the course. Specifying this field in a course update mask will result in an error. Read-only.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Creation time of the course. Specifying this field in a course update mask will result in an error. Read-only.")]
        public string CreationTime { get; set; }

        /// <summary>
        /// <para type="description">Optional description. For example, "We'll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!" If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Optional description. For example, \"We'll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!\" If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.")]
        public string Description { get; set; }

        /// <summary>
        /// <para type="description">Optional heading for the description. For example, "Welcome to 10th Grade Biology." If set, this field must be a valid UTF-8 string and no longer than 3600 characters.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Optional heading for the description. For example, \"Welcome to 10th Grade Biology.\" If set, this field must be a valid UTF-8 string and no longer than 3600 characters.")]
        public string DescriptionHeading { get; set; }

        /// <summary>
        /// <para type="description">Enrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only.</para>
        /// </summary>
        [Parameter(Position = 5,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Enrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only.")]
        public string EnrollmentCode { get; set; }

        /// <summary>
        /// <para type="description">Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask will result in an error.</para>
        /// </summary>
        [Parameter(Position = 6,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask will result in an error.")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">Name of the course. For example, "10th Grade Biology". The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.</para>
        /// </summary>
        [Parameter(Position = 7,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the course. For example, \"10th Grade Biology\". The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.")]
        public string Name { get; set; }

        /// <summary>
        /// <para type="description">The identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user This must be set in a create request. Specifying this field in a course update mask will result in an `INVALID_ARGUMENT` error.</para>
        /// </summary>
        [Parameter(Position = 8,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The identifier of the owner of a course. When specified as a parameter of a create course request, this field is required. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user This must be set in a create request. Specifying this field in a course update mask will result in an `INVALID_ARGUMENT` error.")]
        public string OwnerId { get; set; }

        /// <summary>
        /// <para type="description">Optional room location. For example, "301". If set, this field must be a valid UTF-8 string and no longer than 650 characters.</para>
        /// </summary>
        [Parameter(Position = 9,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Optional room location. For example, \"301\". If set, this field must be a valid UTF-8 string and no longer than 650 characters.")]
        public string Room { get; set; }

        /// <summary>
        /// <para type="description">Section of the course. For example, "Period 2". If set, this field must be a valid UTF-8 string and no longer than 2800 characters.</para>
        /// </summary>
        [Parameter(Position = 10,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Section of the course. For example, \"Period 2\". If set, this field must be a valid UTF-8 string and no longer than 2800 characters.")]
        public string Section { get; set; }

        /// <summary>
        /// <para type="description">Time of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only.</para>
        /// </summary>
        [Parameter(Position = 11,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Time of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only.")]
        public string UpdateTime { get; set; }
        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.Classroom.v1.Data.Course()
            {
                AlternateLink = this.AlternateLink,
                CourseState = this.CourseState,
                CreationTime = this.CreationTime,
                Description = this.Description,
                DescriptionHeading = this.DescriptionHeading,
                EnrollmentCode = this.EnrollmentCode,
                Id = this.Id,
                Name = this.Name,
                OwnerId = this.OwnerId,
                Room = this.Room,
                Section = this.Section,
                UpdateTime = this.UpdateTime,
            };

            if (ShouldProcess("Course"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Classroom API CourseAlias object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a CourseAlias object which may be required as a parameter for some other Cmdlets in the Classroom API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.Classroom.v1.Data.CourseAlias</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomCourseAliasObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomCourseAliasObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomCourseAliasObj",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomCourseAliasObj")]
    [OutputType(typeof(Google.Apis.Classroom.v1.Data.CourseAlias))]
    public class NewGClassroomCourseAliasObjCommand : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Alias string. The format of the string indicates the desired alias scoping. * `d:` indicates a domain-scoped alias. Example: `d:math_101` * `p:` indicates a project-scoped alias. Example: `p:abc123` This field has a maximum length of 256 characters.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Alias string. The format of the string indicates the desired alias scoping. * `d:` indicates a domain-scoped alias. Example: `d:math_101` * `p:` indicates a project-scoped alias. Example: `p:abc123` This field has a maximum length of 256 characters.")]
        public string Alias { get; set; }
        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.Classroom.v1.Data.CourseAlias()
            {
                Alias = this.Alias,
            };

            if (ShouldProcess("CourseAlias"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Classroom API Invitation object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Invitation object which may be required as a parameter for some other Cmdlets in the Classroom API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.Classroom.v1.Data.Invitation</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomInvitationObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomInvitationObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomInvitationObj",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomInvitationObj")]
    [OutputType(typeof(Google.Apis.Classroom.v1.Data.Invitation))]
    public class NewGClassroomInvitationObjCommand : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifier of the course to invite the user to.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier of the course to invite the user to.")]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Identifier assigned by Classroom. Read-only.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier assigned by Classroom. Read-only.")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.")]
        public string Role { get; set; }

        /// <summary>
        /// <para type="description">Identifier of the invited user. When specified as a parameter of a request, this identifier can be set to one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier of the invited user. When specified as a parameter of a request, this identifier can be set to one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user")]
        public string UserId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.Classroom.v1.Data.Invitation()
            {
                CourseId = this.CourseId,
                Id = this.Id,
                Role = this.Role,
                UserId = this.UserId,
            };

            if (ShouldProcess("Invitation"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Classroom API GlobalPermission object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a GlobalPermission object which may be required as a parameter for some other Cmdlets in the Classroom API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.Classroom.v1.Data.GlobalPermission</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomGlobalPermissionObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomGlobalPermissionObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomGlobalPermissionObj",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomGlobalPermissionObj")]
    [OutputType(typeof(Google.Apis.Classroom.v1.Data.GlobalPermission))]
    public class NewGClassroomGlobalPermissionObjCommand : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Permission value.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Permission value.")]
        public string Permission { get; set; }
        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.Classroom.v1.Data.GlobalPermission()
            {
                Permission = this.Permission,
            };

            if (ShouldProcess("GlobalPermission"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Classroom API Name object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Name object which may be required as a parameter for some other Cmdlets in the Classroom API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.Classroom.v1.Data.Name</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomNameObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomNameObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomNameObj",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomNameObj")]
    [OutputType(typeof(Google.Apis.Classroom.v1.Data.Name))]
    public class NewGClassroomNameObjCommand : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">The user's last name. Read-only.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The user's last name. Read-only.")]
        public string FamilyName { get; set; }

        /// <summary>
        /// <para type="description">The user's full name formed by concatenating the first and last name values. Read-only.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The user's full name formed by concatenating the first and last name values. Read-only.")]
        public string FullName { get; set; }

        /// <summary>
        /// <para type="description">The user's first name. Read-only.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "The user's first name. Read-only.")]
        public string GivenName { get; set; }
        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.Classroom.v1.Data.Name()
            {
                FamilyName = this.FamilyName,
                FullName = this.FullName,
                GivenName = this.GivenName,
            };

            if (ShouldProcess("Name"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Classroom API Teacher object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Teacher object which may be required as a parameter for some other Cmdlets in the Classroom API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.Classroom.v1.Data.Teacher</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomTeacherObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomTeacherObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomTeacherObj",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomTeacherObj")]
    [OutputType(typeof(Google.Apis.Classroom.v1.Data.Teacher))]
    public class NewGClassroomTeacherObjCommand : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Identifier of the course. Read-only.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier of the course. Read-only.")]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Global user information for the teacher. Read-only.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Global user information for the teacher. Read-only.")]
        public UserProfile Profile { get; set; }

        /// <summary>
        /// <para type="description">Identifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier of the user. When specified as a parameter of a request, this identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user")]
        public string UserId { get; set; }
        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.Classroom.v1.Data.Teacher()
            {
                CourseId = this.CourseId,
                Profile = this.Profile,
                UserId = this.UserId,
            };

            if (ShouldProcess("Teacher"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new Classroom API UserProfile object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a UserProfile object which may be required as a parameter for some other Cmdlets in the Classroom API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.Classroom.v1.Data.UserProfile</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomUserProfileObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomUserProfileObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomUserProfileObj",
    SupportsShouldProcess = true,
    HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomUserProfileObj")]
    [OutputType(typeof(Google.Apis.Classroom.v1.Data.UserProfile))]
    public class NewGClassroomUserProfileObjCommand : PSCmdlet
    {
        #region Properties


        /// <summary>
        /// <para type="description">Email address of the user. Read-only.</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Email address of the user. Read-only.")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// <para type="description">Identifier of the user. Read-only.</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Identifier of the user. Read-only.")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">Name of the user. Read-only.</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Name of the user. Read-only.")]
        public Name Name { get; set; }

        /// <summary>
        /// <para type="description">Global permissions of the user. Read-only.</para>
        /// </summary>
        [Parameter(Position = 3,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "Global permissions of the user. Read-only.")]
        public System.Collections.Generic.IList<GlobalPermission> Permissions { get; set; }

        /// <summary>
        /// <para type="description">URL of user's profile photo. Read-only.</para>
        /// </summary>
        [Parameter(Position = 4,
        Mandatory = false,
        ValueFromPipelineByPropertyName = true,
        HelpMessage = "URL of user's profile photo. Read-only.")]
        public string PhotoUrl { get; set; }
        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.Classroom.v1.Data.UserProfile()
            {
                EmailAddress = this.EmailAddress,
                Id = this.Id,
                Name = this.Name,
                Permissions = this.Permissions,
                PhotoUrl = this.PhotoUrl,
            };

            if (ShouldProcess("UserProfile"))
            {
                WriteObject(body);
            }
        }
    }
}

namespace gShell.Cmdlets.Classroom.Courses
{
    /// <summary>
    /// <para type="synopsis">Creates a course. The user specified in `ownerId` is the owner of the created course and added as a teacher. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create courses or for access errors. * `NOT_FOUND` if the primary teacher is not a valid user. * `FAILED_PRECONDITION` if the course owner's account is disabled or for the following request errors: * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if an alias was specified in the `id` and already exists.</para>
    /// <para type="description">Creates a course. The user specified in `ownerId` is the owner of the created course and added as a teacher. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create courses or for access errors. * `NOT_FOUND` if the primary teacher is not a valid user. * `FAILED_PRECONDITION` if the course owner's account is disabled or for the following request errors: * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if an alias was specified in the `id` and already exists.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomCourse -CourseBody $SomeCourseObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomCourse">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomCourse",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomCourse")]
    public class NewGClassroomCourseCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">A Course in Classroom.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipeline = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "A Course in Classroom.")]
        public Course CourseBody { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Courses", "New-GClassroomCourse"))
            {
                WriteObject(courses.Create(CourseBody));
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Deletes a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID.</para>
    /// <para type="description">Deletes a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Remove-GClassroomCourse -Id $SomeIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Remove-GClassroomCourse">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Remove, "GClassroomCourse",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Remove-GClassroomCourse")]
    public class RemoveGClassroomCourseCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course to delete. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course to delete. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">A switch to run the cmdlet without prompting</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        HelpMessage = "A switch to run the cmdlet without prompting")]
        public SwitchParameter Force { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            string toRemoveTarget = "Classroom Course";

            if (ShouldProcess(toRemoveTarget))
            {
                if (Force || ShouldContinue(toRemoveTarget + "will be removed.\nContinue?", "Confirm Removal"))
                {
                    try
                    {
                        WriteDebug("Attempting to remove " + toRemoveTarget + "...");

                        WriteObject(courses.Delete(Id));

                        WriteVerbose("Removal of " + toRemoveTarget + " completed without error.");
                    }
                    catch (Exception e)
                    {
                        WriteError(new ErrorRecord(e, e.GetBaseException().ToString(), ErrorCategory.InvalidData, toRemoveTarget));
                    }
                }
                else
                {
                    WriteError(new ErrorRecord(new Exception("Deletion not confirmed"),
                        "", ErrorCategory.InvalidData, toRemoveTarget));
                }
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Returns a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID.</para>
    /// <para type="description">Returns a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomCourse -Id $SomeIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomCourse -All</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GClassroomCourse">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GClassroomCourse",
        SupportsShouldProcess = true,
        DefaultParameterSetName = "one",
        HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GClassroomCourse")]
    public class GetGClassroomCourseCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course to return. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            ParameterSetName = "one",
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course to return. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">A switch to list all results</para>
        /// </summary>
        [Parameter(Position = 0,
        Mandatory = true,
        ParameterSetName = "list",
        HelpMessage = "A switch to list all results.")]
        public SwitchParameter All { get; set; }

        /// <summary>
        /// <para type="description">Restricts returned courses to those having a student with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 1,
            ParameterSetName = "list",
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Restricts returned courses to those having a student with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user"
            )]
        public string StudentId { get; set; }

        /// <summary>
        /// <para type="description">Restricts returned courses to those having a teacher with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 2,
            ParameterSetName = "list",
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Restricts returned courses to those having a teacher with the specified identifier. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user"
            )]
        public string TeacherId { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.</para>
        /// </summary>
        [Parameter(Position = 2,
            ParameterSetName = "list",
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results."
            )]
        public int? PageSize { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Courses", "Get-GClassroomCourse"))
            {
                if (ParameterSetName == "one")
                {
                    WriteObject(courses.Get(Id));
                }
                else
                {
                    var properties = new gClassroom.Courses.CoursesListProperties
                    {
                        StudentId = StudentId,
                        TeacherId = TeacherId,
                        PageSize = PageSize
                    };

                    WriteObject(courses.List(properties).SelectMany(x => x.Courses).ToList());
                }
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Updates one or more fields in a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to modify the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID. * `INVALID_ARGUMENT` if invalid fields are specified in the update mask or if no update mask is supplied. * `FAILED_PRECONDITION` for the following request errors: * CourseNotModifiable</para>
    /// <para type="description">Updates one or more fields in a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to modify the requested course or for access errors. * `NOT_FOUND` if no course exists with the requested ID. * `INVALID_ARGUMENT` if invalid fields are specified in the update mask or if no update mask is supplied. * `FAILED_PRECONDITION` for the following request errors: * CourseNotModifiable</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Set-GClassroomCourse -Id $SomeIdString -CourseBody $SomeCourseObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Set-GClassroomCourse">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Set, "GClassroomCourse",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Set-GClassroomCourse")]
    public class SetGClassroomCourseCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course to update. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course to update. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">A Course in Classroom.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipeline = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "A Course in Classroom.")]
        public Course CourseBody { get; set; }

        /// <summary>
        /// <para type="description">Mask that identifies which fields on the course to update. This field is required to do an update. The update will fail if invalid fields are specified. The following fields are valid: * `name` * `section` * `descriptionHeading` * `description` * `room` * `courseState` When set in a query parameter, this field should be specified as `updateMask=,,...`</para>
        /// </summary>
        [Parameter(Position = 2,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Mask that identifies which fields on the course to update. This field is required to do an update. The update will fail if invalid fields are specified. The following fields are valid: * `name` * `section` * `descriptionHeading` * `description` * `room` * `courseState` When set in a query parameter, this field should be specified as `updateMask=,,...`"
            )]
        public string UpdateMask { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Courses", "Set-GClassroomCourse"))
            {
                var properties = new gClassroom.Courses.CoursesPatchProperties
                {
                    UpdateMask = UpdateMask
                };


                WriteObject(courses.Patch(CourseBody, Id, properties));
            }
        }
    }

}

namespace gShell.Cmdlets.Classroom.Courses.Aliases
{
    /// <summary>
    /// <para type="synopsis">Creates an alias for a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create the alias or for access errors. * `NOT_FOUND` if the course does not exist. * `ALREADY_EXISTS` if the alias already exists.</para>
    /// <para type="description">Creates an alias for a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create the alias or for access errors. * `NOT_FOUND` if the course does not exist. * `ALREADY_EXISTS` if the alias already exists.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomAlias -CourseId $SomeCourseIdString -CourseAliasBody $SomeCourseAliasObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomAlias">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomAlias",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomAlias")]
    public class NewGClassroomAliasCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course to alias. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course to alias. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Alternative identifier for a course. An alias uniquely identifies a course. It must be unique within one of the following scopes: * domain: A domain-scoped alias is visible to all users within the alias creator's domain and can be created only by a domain admin. A domain-scoped alias is often used when a course has an identifier external to Classroom. * project: A project-scoped alias is visible to any request from an application using the Developer Console project ID that created the alias and can be created by any project. A project-scoped alias is often used when an application has alternative identifiers. A random value can also be used to avoid duplicate courses in the event of transmission failures, as retrying a request will return `ALREADY_EXISTS` if a previous one has succeeded.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipeline = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Alternative identifier for a course. An alias uniquely identifies a course. It must be unique within one of the following scopes: * domain: A domain-scoped alias is visible to all users within the alias creator's domain and can be created only by a domain admin. A domain-scoped alias is often used when a course has an identifier external to Classroom. * project: A project-scoped alias is visible to any request from an application using the Developer Console project ID that created the alias and can be created by any project. A project-scoped alias is often used when an application has alternative identifiers. A random value can also be used to avoid duplicate courses in the event of transmission failures, as retrying a request will return `ALREADY_EXISTS` if a previous one has succeeded."
            )]
        public CourseAlias CourseAliasBody { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Aliases", "New-GClassroomAlias"))
            {
                WriteObject(courses.aliases.Create(CourseAliasBody, CourseId));
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Deletes an alias of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to remove the alias or for access errors. * `NOT_FOUND` if the alias does not exist.</para>
    /// <para type="description">Deletes an alias of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to remove the alias or for access errors. * `NOT_FOUND` if the alias does not exist.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Remove-GClassroomAlias -CourseId $SomeCourseIdString -Alias $SomeAliasString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Remove-GClassroomAlias">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Remove, "GClassroomAlias",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Remove-GClassroomAlias")]
    public class RemoveGClassroomAliasCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course whose alias should be deleted. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course whose alias should be deleted. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Alias to delete. This may not be the Classroom-assigned identifier.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Alias to delete. This may not be the Classroom-assigned identifier.")]
        public string Alias { get; set; }

        /// <summary>
        /// <para type="description">A switch to run the cmdlet without prompting</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        HelpMessage = "A switch to run the cmdlet without prompting")]
        public SwitchParameter Force { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            string toRemoveTarget = "Classroom Alias";

            if (ShouldProcess(toRemoveTarget))
            {
                if (Force || ShouldContinue(toRemoveTarget + "will be removed.\nContinue?", "Confirm Removal"))
                {
                    try
                    {
                        WriteDebug("Attempting to remove " + toRemoveTarget + "...");

                        WriteObject(courses.aliases.Delete(CourseId, Alias));

                        WriteVerbose("Removal of " + toRemoveTarget + " completed without error.");
                    }
                    catch (Exception e)
                    {
                        WriteError(new ErrorRecord(e, e.GetBaseException().ToString(), ErrorCategory.InvalidData, toRemoveTarget));
                    }
                }
                else
                {
                    WriteError(new ErrorRecord(new Exception("Deletion not confirmed"),
                        "", ErrorCategory.InvalidData, toRemoveTarget));
                }
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Returns a list of aliases for a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the course or for access errors. * `NOT_FOUND` if the course does not exist.</para>
    /// <para type="description">Returns a list of aliases for a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the course or for access errors. * `NOT_FOUND` if the course does not exist.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomAlias -CourseId $SomeCourseIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GClassroomAlias">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GClassroomAlias",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GClassroomAlias")]
    public class GetGClassroomAliasCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">The identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "The identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results."
            )]
        public int? PageSize { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Aliases", "Get-GClassroomAlias"))
            {
                var properties = new gClassroom.Courses.Aliases.AliasesListProperties
                {
                    PageSize = PageSize
                };

                WriteObject(courses.aliases.List(CourseId, properties).SelectMany(x => x.Aliases).ToList());
            }
        }
    }
}

namespace gShell.Cmdlets.Classroom.Courses.Students
{
    /// <summary>
    /// <para type="synopsis">Adds a user as a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create students in this course or for access errors. * `NOT_FOUND` if the requested course ID does not exist. * `FAILED_PRECONDITION` if the requested user's account is disabled, for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if the user is already a student or teacher in the course.</para>
    /// <para type="description">Adds a user as a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create students in this course or for access errors. * `NOT_FOUND` if the requested course ID does not exist. * `FAILED_PRECONDITION` if the requested user's account is disabled, for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if the user is already a student or teacher in the course.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomStudent -CourseId $SomeCourseIdString -StudentBody $SomeStudentObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomStudent">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomStudent",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomStudent")]
    public class NewGClassroomStudentCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course to create the student in. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course to create the student in. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Student in a course.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipeline = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Student in a course.")]
        public Student StudentBody { get; set; }

        /// <summary>
        /// <para type="description">Enrollment code of the course to create the student in. This code is required if userId corresponds to the requesting user; it may be omitted if the requesting user has administrative permissions to create students for any user.</para>
        /// </summary>
        [Parameter(Position = 2,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Enrollment code of the course to create the student in. This code is required if userId corresponds to the requesting user; it may be omitted if the requesting user has administrative permissions to create students for any user."
            )]
        public string EnrollmentCode { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Students", "New-GClassroomStudent"))
            {
                var properties = new gClassroom.Courses.Students.StudentsCreateProperties
                {
                    EnrollmentCode = EnrollmentCode
                };


                WriteObject(courses.students.Create(StudentBody, CourseId, properties));
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Deletes a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete students of this course or for access errors. * `NOT_FOUND` if no student of this course has the requested ID or if the course does not exist.</para>
    /// <para type="description">Deletes a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete students of this course or for access errors. * `NOT_FOUND` if no student of this course has the requested ID or if the course does not exist.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Remove-GClassroomStudent -CourseId $SomeCourseIdString -UserId $SomeUserIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Remove-GClassroomStudent">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Remove, "GClassroomStudent",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Remove-GClassroomStudent")]
    public class RemoveGClassroomStudentCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Identifier of the student to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the student to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user"
            )]
        public string UserId { get; set; }

        /// <summary>
        /// <para type="description">A switch to run the cmdlet without prompting</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        HelpMessage = "A switch to run the cmdlet without prompting")]
        public SwitchParameter Force { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            string toRemoveTarget = "Classroom Student";

            if (ShouldProcess(toRemoveTarget))
            {
                if (Force || ShouldContinue(toRemoveTarget + "will be removed.\nContinue?", "Confirm Removal"))
                {
                    try
                    {
                        WriteDebug("Attempting to remove " + toRemoveTarget + "...");

                        WriteObject(courses.students.Delete(CourseId, UserId));

                        WriteVerbose("Removal of " + toRemoveTarget + " completed without error.");
                    }
                    catch (Exception e)
                    {
                        WriteError(new ErrorRecord(e, e.GetBaseException().ToString(), ErrorCategory.InvalidData, toRemoveTarget));
                    }
                }
                else
                {
                    WriteError(new ErrorRecord(new Exception("Deletion not confirmed"),
                        "", ErrorCategory.InvalidData, toRemoveTarget));
                }
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Returns a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view students of this course or for access errors. * `NOT_FOUND` if no student of this course has the requested ID or if the course does not exist.</para>
    /// <para type="description">Returns a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view students of this course or for access errors. * `NOT_FOUND` if no student of this course has the requested ID or if the course does not exist.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomStudent -CourseId $SomeCourseIdString -UserId $SomeUserIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomStudent -CourseId $SomeCourseIdString -All</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GClassroomStudent">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GClassroomStudent",
        SupportsShouldProcess = true,
        DefaultParameterSetName = "one",
        HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GClassroomStudent")]
    public class GetGClassroomStudentCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Identifier of the student to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 1,
            ParameterSetName = "one",
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the student to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user"
            )]
        public string UserId { get; set; }

        /// <summary>
        /// <para type="description">A switch to list all results</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ParameterSetName = "list",
        HelpMessage = "A switch to list all results.")]
        public SwitchParameter All { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.</para>
        /// </summary>
        [Parameter(Position = 2,
            ParameterSetName = "list",
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results."
            )]
        public int? PageSize { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Students", "Get-GClassroomStudent"))
            {
                if (ParameterSetName == "one")
                {
                    WriteObject(courses.students.Get(CourseId, UserId));
                }
                else
                {
                    var properties = new gClassroom.Courses.Students.StudentsListProperties
                    {
                        PageSize = PageSize
                    };

                    WriteObject(courses.students.List(CourseId, properties).SelectMany(x => x.Students).ToList());
                }
            }
        }
    }
}

namespace gShell.Cmdlets.Classroom.Courses.Teachers
{
    /// <summary>
    /// <para type="synopsis">Creates a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create teachers in this course or for access errors. * `NOT_FOUND` if the requested course ID does not exist. * `FAILED_PRECONDITION` if the requested user's account is disabled, for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if the user is already a teacher or student in the course.</para>
    /// <para type="description">Creates a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create teachers in this course or for access errors. * `NOT_FOUND` if the requested course ID does not exist. * `FAILED_PRECONDITION` if the requested user's account is disabled, for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * `ALREADY_EXISTS` if the user is already a teacher or student in the course.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomTeacher -CourseId $SomeCourseIdString -TeacherBody $SomeTeacherObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomTeacher">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomTeacher",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomTeacher")]
    public class NewGClassroomTeacherCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Teacher of a course.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipeline = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Teacher of a course.")]
        public Teacher TeacherBody { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Teachers", "New-GClassroomTeacher"))
            {
                WriteObject(courses.teachers.Create(TeacherBody, CourseId));
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Deletes a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete teachers of this course or for access errors. * `NOT_FOUND` if no teacher of this course has the requested ID or if the course does not exist. * `FAILED_PRECONDITION` if the requested ID belongs to the primary teacher of this course.</para>
    /// <para type="description">Deletes a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete teachers of this course or for access errors. * `NOT_FOUND` if no teacher of this course has the requested ID or if the course does not exist. * `FAILED_PRECONDITION` if the requested ID belongs to the primary teacher of this course.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Remove-GClassroomTeacher -CourseId $SomeCourseIdString -UserId $SomeUserIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Remove-GClassroomTeacher">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Remove, "GClassroomTeacher",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Remove-GClassroomTeacher")]
    public class RemoveGClassroomTeacherCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Identifier of the teacher to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the teacher to delete. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user"
            )]
        public string UserId { get; set; }

        /// <summary>
        /// <para type="description">A switch to run the cmdlet without prompting</para>
        /// </summary>
        [Parameter(Position = 2,
        Mandatory = false,
        HelpMessage = "A switch to run the cmdlet without prompting")]
        public SwitchParameter Force { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            string toRemoveTarget = "Classroom Teacher";

            if (ShouldProcess(toRemoveTarget))
            {
                if (Force || ShouldContinue(toRemoveTarget + "will be removed.\nContinue?", "Confirm Removal"))
                {
                    try
                    {
                        WriteDebug("Attempting to remove " + toRemoveTarget + "...");

                        WriteObject(courses.teachers.Delete(CourseId, UserId));

                        WriteVerbose("Removal of " + toRemoveTarget + " completed without error.");
                    }
                    catch (Exception e)
                    {
                        WriteError(new ErrorRecord(e, e.GetBaseException().ToString(), ErrorCategory.InvalidData, toRemoveTarget));
                    }
                }
                else
                {
                    WriteError(new ErrorRecord(new Exception("Deletion not confirmed"),
                        "", ErrorCategory.InvalidData, toRemoveTarget));
                }
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Returns a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view teachers of this course or for access errors. * `NOT_FOUND` if no teacher of this course has the requested ID or if the course does not exist.</para>
    /// <para type="description">Returns a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view teachers of this course or for access errors. * `NOT_FOUND` if no teacher of this course has the requested ID or if the course does not exist.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomTeacher -CourseId $SomeCourseIdString -UserId $SomeUserIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomTeacher -CourseId $SomeCourseIdString -All</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GClassroomTeacher">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GClassroomTeacher",
        SupportsShouldProcess = true,
        DefaultParameterSetName = "one",
        HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GClassroomTeacher")]
    public class GetGClassroomTeacherCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias."
            )]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Identifier of the teacher to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 1,
            ParameterSetName = "one",
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the teacher to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user"
            )]
        public string UserId { get; set; }

        /// <summary>
        /// <para type="description">A switch to list all results</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = true,
        ParameterSetName = "list",
        HelpMessage = "A switch to list all results.")]
        public SwitchParameter All { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.</para>
        /// </summary>
        [Parameter(Position = 2,
            ParameterSetName = "list",
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results."
            )]
        public int? PageSize { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Teachers", "Get-GClassroomTeacher"))
            {
                if (ParameterSetName == "one")
                {
                    WriteObject(courses.teachers.Get(CourseId, UserId));
                }
                else
                {
                    var properties = new gClassroom.Courses.Teachers.TeachersListProperties
                    {
                        PageSize = PageSize
                    };

                    WriteObject(courses.teachers.List(CourseId, properties).SelectMany(x => x.Teachers).ToList());
                }
            }
        }
    }
}

namespace gShell.Cmdlets.Classroom.Invitations
{
    /// <summary>
    /// <para type="synopsis">Accepts an invitation, removing it and adding the invited user to the teachers or students (as appropriate) of the specified course. Only the invited user may accept an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to accept the requested invitation or for access errors. * `FAILED_PRECONDITION` for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * `NOT_FOUND` if no invitation exists with the requested ID.</para>
    /// <para type="description">Accepts an invitation, removing it and adding the invited user to the teachers or students (as appropriate) of the specified course. Only the invited user may accept an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to accept the requested invitation or for access errors. * `FAILED_PRECONDITION` for the following request errors: * CourseMemberLimitReached * CourseNotModifiable * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * `NOT_FOUND` if no invitation exists with the requested ID.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Approve-GClassroomInvitation -Id $SomeIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Approve-GClassroomInvitation">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsLifecycle.Approve, "GClassroomInvitation",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Approve-GClassroomInvitation")]
    public class ApproveGClassroomInvitationCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the invitation to accept.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Identifier of the invitation to accept.")]
        public string Id { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Invitations", "Approve-GClassroomInvitation"))
            {
                WriteObject(invitations.Accept(Id));
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates an invitation. Only one invitation for a user and course may exist at a time. Delete and re-create an invitation to make changes. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create invitations for this course or for access errors. * `NOT_FOUND` if the course or the user does not exist. * `FAILED_PRECONDITION` if the requested user's account is disabled or if the user already has this role or a role with greater permissions. * `ALREADY_EXISTS` if an invitation for the specified user and course already exists.</para>
    /// <para type="description">Creates an invitation. Only one invitation for a user and course may exist at a time. Delete and re-create an invitation to make changes. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create invitations for this course or for access errors. * `NOT_FOUND` if the course or the user does not exist. * `FAILED_PRECONDITION` if the requested user's account is disabled or if the user already has this role or a role with greater permissions. * `ALREADY_EXISTS` if an invitation for the specified user and course already exists.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>New-GClassroomInvitation -InvitationBody $SomeInvitationObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GClassroomInvitation">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GClassroomInvitation",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GClassroomInvitation")]
    public class NewGClassroomInvitationCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">An invitation to join a course.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = false,
            ValueFromPipeline = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "An invitation to join a course.")]
        public Invitation InvitationBody { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Invitations", "New-GClassroomInvitation"))
            {
                WriteObject(invitations.Create(InvitationBody));
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Deletes an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete the requested invitation or for access errors. * `NOT_FOUND` if no invitation exists with the requested ID.</para>
    /// <para type="description">Deletes an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete the requested invitation or for access errors. * `NOT_FOUND` if no invitation exists with the requested ID.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Remove-GClassroomInvitation -Id $SomeIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Remove-GClassroomInvitation">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Remove, "GClassroomInvitation",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Remove-GClassroomInvitation")]
    public class RemoveGClassroomInvitationCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the invitation to delete.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Identifier of the invitation to delete.")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">A switch to run the cmdlet without prompting</para>
        /// </summary>
        [Parameter(Position = 1,
        Mandatory = false,
        HelpMessage = "A switch to run the cmdlet without prompting")]
        public SwitchParameter Force { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            string toRemoveTarget = "Classroom Invitation";

            if (ShouldProcess(toRemoveTarget))
            {
                if (Force || ShouldContinue(toRemoveTarget + "will be removed.\nContinue?", "Confirm Removal"))
                {
                    try
                    {
                        WriteDebug("Attempting to remove " + toRemoveTarget + "...");

                        WriteObject(invitations.Delete(Id));

                        WriteVerbose("Removal of " + toRemoveTarget + " completed without error.");
                    }
                    catch (Exception e)
                    {
                        WriteError(new ErrorRecord(e, e.GetBaseException().ToString(), ErrorCategory.InvalidData, toRemoveTarget));
                    }
                }
                else
                {
                    WriteError(new ErrorRecord(new Exception("Deletion not confirmed"),
                        "", ErrorCategory.InvalidData, toRemoveTarget));
                }
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Returns an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view the requested invitation or for access errors. * `NOT_FOUND` if no invitation exists with the requested ID.</para>
    /// <para type="description">Returns an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view the requested invitation or for access errors. * `NOT_FOUND` if no invitation exists with the requested ID.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomInvitation -Id $SomeIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomInvitation -All</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GClassroomInvitation">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GClassroomInvitation",
        SupportsShouldProcess = true,
        DefaultParameterSetName = "one",
        HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GClassroomInvitation")]
    public class GetGClassroomInvitationCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the invitation to return.</para>
        /// </summary>
        [Parameter(Position = 0,
            ParameterSetName = "one",
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Identifier of the invitation to return.")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">A switch to list all results</para>
        /// </summary>
        [Parameter(Position = 0,
            ParameterSetName = "list",
        Mandatory = true,
        HelpMessage = "A switch to list all results.")]
        public SwitchParameter All { get; set; }

        /// <summary>
        /// <para type="description">Restricts returned invitations to those for a specific user. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 1,
            ParameterSetName = "list",
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Restricts returned invitations to those for a specific user. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user"
            )]
        public string UserId { get; set; }

        /// <summary>
        /// <para type="description">Restricts returned invitations to those for a course with the specified identifier.</para>
        /// </summary>
        [Parameter(Position = 2,
            ParameterSetName = "list",
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Restricts returned invitations to those for a course with the specified identifier.")]
        public string CourseId { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.</para>
        /// </summary>
        [Parameter(Position = 3,
            ParameterSetName = "list",
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results."
            )]
        public int? PageSize { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom Invitations", "Get-GClassroomInvitation"))
            {
                if (ParameterSetName == "one")
                {
                    WriteObject(invitations.Get(Id));
                }
                else
                {
                    var properties = new gClassroom.Invitations.InvitationsListProperties
                    {
                        UserId = UserId,
                        CourseId = CourseId,
                        PageSize = PageSize
                    };

                    WriteObject(invitations.List(properties).SelectMany(x => x.Invitations).ToList());
                }
            }
        }
    }
}

namespace gShell.Cmdlets.Classroom.UserProfiles
{
    /// <summary>
    /// <para type="synopsis">Returns a user profile. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access this user profile or if no profile exists with the requested ID or for access errors.</para>
    /// <para type="description">Returns a user profile. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access this user profile or if no profile exists with the requested ID or for access errors.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google Classroom API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\>Get-GClassroomUserProfile -UserId $SomeUserIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GClassroomUserProfile">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GClassroomUserProfile",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GClassroomUserProfile")]
    public class GetGClassroomUserProfileCommand : ClassroomServiceAccountBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">Identifier of the profile to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "Identifier of the profile to return. The identifier can be one of the following: * the numeric identifier for the user * the email address of the user * the string literal `\"me\"`, indicating the requesting user"
            )]
        public string UserId { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("Classroom UserProfiles", "Get-GClassroomUserProfile"))
            {
                WriteObject(userProfiles.Get(UserId));
            }
        }
    }
}